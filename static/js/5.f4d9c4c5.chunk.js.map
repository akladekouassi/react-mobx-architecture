{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","../node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","views/about-page/AboutPage.tsx"],"names":["HeaderSubheader","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","HeaderContent","Header","attached","block","color","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign","useKeyOnly","useValueAndKey","useKeyOrValueAndKey","useTextAlignProp","iconElement","Icon","autoGenerateKey","imageElement","Image","subheaderElement","Content","Subheader","Container","fluid","text","MessageContent","MessageHeader","val","MessageItem","defaultProps","as","MessageList","items","_map","Message","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","e","onDismiss","_inherits","_createClass","key","value","_this$props","compact","error","floating","header","hidden","info","list","negative","positive","success","visible","warning","dismissIcon","name","onClick","handleDismiss","_isNil","createHTMLParagraph","Component","AboutPage","observer","showsStore","rootStore","useEffect","requestError","errorExample","isRequesting","styles","wrapper","LoadingIndicator","isActive"],"mappings":"0PASA,SAASA,EAAgBC,GACvB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,aAAcH,GAC3BI,EAAOC,YAAkBR,EAAiBC,GAC1CQ,EAAcC,YAAeV,EAAiBC,GAClD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDF,EAAgBgB,aAAe,CAAC,KAAM,WAAY,YAAa,WAC/DhB,EAAgBiB,UAYZ,GACJjB,EAAgBkB,OAASC,YAAuBnB,GAAiB,SAAUI,GACzE,MAAO,CACLA,QAASA,MAGEJ,QC/Bf,SAASoB,EAAcnB,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,UAAWH,GACxBI,EAAOC,YAAkBY,EAAenB,GACxCQ,EAAcC,YAAeU,EAAenB,GAChD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDkB,EAAcJ,aAAe,CAAC,KAAM,WAAY,YAAa,WAC7DI,EAAcH,UAYV,GACWG,QCrBf,SAASC,EAAOpB,GACd,IAAIqB,EAAWrB,EAAMqB,SACjBC,EAAQtB,EAAMsB,MACdrB,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBqB,EAAQvB,EAAMuB,MACdpB,EAAUH,EAAMG,QAChBqB,EAAWxB,EAAMwB,SACjBC,EAAWzB,EAAMyB,SACjBC,EAAU1B,EAAM0B,QAChBC,EAAO3B,EAAM2B,KACbC,EAAQ5B,EAAM4B,MACdC,EAAW7B,EAAM6B,SACjBC,EAAO9B,EAAM8B,KACbC,EAAM/B,EAAM+B,IACZC,EAAYhC,EAAMgC,UAClBC,EAAYjC,EAAMiC,UAClB7B,EAAUC,IAAG,KAAMkB,EAAOO,EAAMI,YAAWZ,EAAO,SAAUY,YAAWV,EAAU,YAAaU,YAAWT,EAAU,YAAaU,YAAeT,EAAS,WAAYQ,aAAoB,IAATP,EAAe,QAASO,aAAqB,IAAVN,EAAgB,SAAUM,YAAWL,EAAU,YAAaK,YAAWH,EAAK,OAAQK,YAAoBf,EAAU,YAAagB,YAAiBJ,GAAY,SAAU/B,GACxXI,EAAOC,YAAkBa,EAAQpB,GACjCQ,EAAcC,YAAeW,EAAQpB,GAEzC,IAAKa,IAAcC,MAAMb,GACvB,OAAOS,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTH,GAGN,IAAIqC,EAAcC,IAAKtB,OAAOU,EAAM,CAClCa,iBAAiB,IAEfC,EAAeC,IAAMzB,OAAOW,EAAO,CACrCY,iBAAiB,IAEfG,EAAmB5C,EAAgBkB,OAAOe,EAAW,CACvDQ,iBAAiB,IAGnB,OAAIF,GAAeG,EACV/B,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTkC,GAAeG,GAAetC,GAAWwC,IAAqBjC,IAAMC,cAAcQ,EAAe,KAAMhB,EAASwC,IAG/GjC,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTD,EAASwC,GAGfvB,EAAOL,aAAe,CAAC,KAAM,WAAY,QAAS,WAAY,YAAa,QAAS,UAAW,WAAY,WAAY,UAAW,OAAQ,QAAS,WAAY,OAAQ,MAAO,YAAa,aAC3LK,EAAOJ,UAmDH,GACJI,EAAOwB,QAAUzB,EACjBC,EAAOyB,UAAY9C,EACJqB,O,8LC5Gf,SAAS0B,EAAU9C,GACjB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChB4C,EAAQ/C,EAAM+C,MACdC,EAAOhD,EAAMgD,KACbf,EAAYjC,EAAMiC,UAClB7B,EAAUC,IAAG,KAAM6B,YAAWc,EAAM,QAASd,YAAWa,EAAO,SAAUV,YAAiBJ,GAAY,YAAa/B,GACnHI,EAAOC,YAAkBuC,EAAW9C,GACpCQ,EAAcC,YAAeqC,EAAW9C,GAC5C,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhD6C,EAAU/B,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,OAAQ,aACrF+B,EAAU9B,UAqBN,GACW8B,Q,6JCtCf,SAASG,EAAejD,GACtB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,UAAWH,GACxBI,EAAOC,YAAkB0C,EAAgBjD,GACzCQ,EAAcC,YAAewC,EAAgBjD,GACjD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDgD,EAAelC,aAAe,CAAC,KAAM,WAAY,YAAa,WAC9DkC,EAAejC,UAYX,GACWiC,QC1Bf,SAASC,EAAclD,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,SAAUH,GACvBI,EAAOC,YAAkB2C,EAAelD,GACxCQ,EAAcC,YAAeyC,EAAelD,GAChD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDiD,EAAcnC,aAAe,CAAC,KAAM,WAAY,YAAa,WAC7DmC,EAAclC,UAYV,GACJkC,EAAcjC,OAASC,YAAuBgC,GAAe,SAAUC,GACrE,MAAO,CACLhD,QAASgD,MAGED,Q,iBC/Bf,SAASE,EAAYpD,GACnB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,UAAWH,GACxBI,EAAOC,YAAkB6C,EAAapD,GACtCQ,EAAcC,YAAe2C,EAAapD,GAC9C,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDmD,EAAYrC,aAAe,CAAC,KAAM,WAAY,YAAa,WAC3DqC,EAAYpC,UAYR,GACJoC,EAAYC,aAAe,CACzBC,GAAI,MAENF,EAAYnC,OAASC,YAAuBkC,GAAa,SAAUjD,GACjE,MAAO,CACLA,QAASA,MAGEiD,QChCf,SAASG,EAAYvD,GACnB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBsD,EAAQxD,EAAMwD,MACdpD,EAAUC,IAAG,OAAQH,GACrBI,EAAOC,YAAkBgD,EAAavD,GACtCQ,EAAcC,YAAe8C,EAAavD,GAC9C,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYwD,IAAKD,EAAOJ,EAAYnC,QAAUhB,GAGxEsD,EAAYxC,aAAe,CAAC,KAAM,WAAY,YAAa,SAC3DwC,EAAYvC,UAYR,GACJuC,EAAYF,aAAe,CACzBC,GAAI,MAENC,EAAYtC,OAASC,YAAuBqC,GAAa,SAAUJ,GACjE,MAAO,CACLK,MAAOL,MAGII,QCrBXG,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAEAC,EAEJC,IAAgBC,KAAML,GAEtB,IAAK,IAAIM,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAUzB,OAPAR,EAAQS,IAA2BP,MAAOH,EAAmBW,IAAgBb,IAAUc,KAAKC,MAAMb,EAAkB,CAACG,MAAMW,OAAOP,KAElIQ,IAAgBC,IAAuBf,GAAQ,iBAAiB,SAAUgB,GACxE,IAAIC,EAAYjB,EAAM7D,MAAM8E,UACxBA,GAAWA,EAAUD,EAAGhB,EAAM7D,UAG7B6D,EAuDT,OA3EAkB,IAAUrB,EAASC,GAuBnBqB,IAAatB,EAAS,CAAC,CACrBuB,IAAK,SACLC,MAAO,WACL,IAAIC,EAAcpB,KAAK/D,MACnBqB,EAAW8D,EAAY9D,SACvBpB,EAAWkF,EAAYlF,SACvBC,EAAYiF,EAAYjF,UACxBqB,EAAQ4D,EAAY5D,MACpB6D,EAAUD,EAAYC,QACtBjF,EAAUgF,EAAYhF,QACtBkF,EAAQF,EAAYE,MACpBC,EAAWH,EAAYG,SACvBC,EAASJ,EAAYI,OACrBC,EAASL,EAAYK,OACrB7D,EAAOwD,EAAYxD,KACnB8D,EAAON,EAAYM,KACnBC,EAAOP,EAAYO,KACnBC,EAAWR,EAAYQ,SACvBb,EAAYK,EAAYL,UACxBc,EAAWT,EAAYS,SACvB9D,EAAOqD,EAAYrD,KACnB+D,EAAUV,EAAYU,QACtBC,EAAUX,EAAYW,QACtBC,EAAUZ,EAAYY,QACtB3F,EAAUC,IAAG,KAAMkB,EAAOO,EAAMI,YAAWkD,EAAS,WAAYlD,YAAWmD,EAAO,SAAUnD,YAAWoD,EAAU,YAAapD,YAAWsD,EAAQ,UAAWtD,YAAWP,EAAM,QAASO,YAAWuD,EAAM,QAASvD,YAAWyD,EAAU,YAAazD,YAAW0D,EAAU,YAAa1D,YAAW2D,EAAS,WAAY3D,YAAW4D,EAAS,WAAY5D,YAAW6D,EAAS,WAAY3D,YAAoBf,EAAU,YAAa,UAAWnB,GAC1a8F,EAAclB,GAAapE,IAAMC,cAAc4B,IAAM,CACvD0D,KAAM,QACNC,QAASnC,KAAKoC,gBAEZ7F,EAAOC,YAAkBmD,EAASK,KAAK/D,OACvCQ,EAAcC,YAAeiD,EAASK,KAAK/D,OAE/C,OAAKa,IAAcC,MAAMb,GAMlBS,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACT4F,EAAazD,IAAKtB,OAAOU,EAAM,CACjCa,iBAAiB,MACb4D,IAAOb,KAAYa,IAAOjG,KAAaiG,IAAOV,KAAUhF,IAAMC,cAAcsC,EAAgB,KAAMC,EAAcjC,OAAOsE,EAAQ,CACnI/C,iBAAiB,IACfe,EAAYtC,OAAOyE,EAAM,CAC3BlD,iBAAiB,IACf6D,YAAoBlG,EAAS,CAC/BqC,iBAAiB,MAdV9B,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACT4F,EAAa/F,OAiBhByD,EA5ET,CA6EE4C,aAEF3B,IAAgBjB,EAAS,UAAWT,GAEpC0B,IAAgBjB,EAAS,SAAUR,GAEnCyB,IAAgBjB,EAAS,OAAQH,GAEjCoB,IAAgBjB,EAAS,OAAQN,GAEjCuB,IAAgBjB,EAAS,eAAgB,CAAC,KAAM,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,QAAS,WAAY,SAAU,SAAU,OAAQ,OAAQ,OAAQ,WAAY,YAAa,WAAY,OAAQ,UAAW,UAAW,YAGxPA,EAAQ1C,UAqEJ,G,qBC7KEuF,EAA8BC,aAAS,SAACxG,GAAW,IAC/CyG,EAAeC,YAAfD,WAERE,qBAAU,WACRF,EAAWG,iBACV,CAACH,IALkD,MAOtBA,EAAWI,aAAnCC,EAP8C,EAO9CA,aAAczB,EAPgC,EAOhCA,MAEtB,OACE,yBAAKnF,UAAW6G,IAAOC,SACrB,kBAAC5F,EAAA,EAAD,CAAQkC,GAAG,MAAX,SACA,kBAAC2D,EAAA,EAAD,CAAkBC,SAAUJ,GAC1B,kBAAC,EAAD,KACE,0MAKDzB,GAAS,kBAAC,EAAD,CAASI,MAAM,EAAMF,OAAO,QAAQpF,QAAQ,2DAM/CoG","file":"static/js/5.f4d9c4c5.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../Icon';\nimport Image from '../Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import styles from './AboutPage.module.scss';\n\nimport React, { useEffect } from 'react';\nimport { LoadingIndicator } from '../components/loading-indicator/LoadingIndicator';\nimport { Header, Container, Message } from 'semantic-ui-react';\nimport { observer } from 'mobx-react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { rootStore } from '../../index';\n\ninterface IRouteParams {}\ninterface IProps extends RouteComponentProps<IRouteParams> {}\n\nconst AboutPage: React.FC<IProps> = observer((props) => {\n  const { showsStore } = rootStore;\n\n  useEffect(() => {\n    showsStore.requestError();\n  }, [showsStore]);\n\n  const { isRequesting, error } = showsStore.errorExample;\n\n  return (\n    <div className={styles.wrapper}>\n      <Header as=\"h2\">About</Header>\n      <LoadingIndicator isActive={isRequesting}>\n        <Container>\n          <p>\n            This page is only to show how to handle API errors on the page. You will also notice a popup indicator with the actual error text. Below\n            we create a custom error message.\n          </p>\n        </Container>\n        {error && <Message info={true} header=\"Error\" content=\"Sorry there was an error requesting this content.\" />}\n      </LoadingIndicator>\n    </div>\n  );\n});\n\nexport default AboutPage;\n"],"sourceRoot":""}